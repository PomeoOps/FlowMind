name: flowmind
description: "用 AI 串联你的代码、阅读、笔记与协作，打造专属工作大脑"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: '>=3.2.0 <4.0.0'

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter

  # UI相关
  cupertino_icons: ^1.0.6
  flutter_bloc: ^8.1.3
  go_router: ^12.1.3
  flutter_svg: ^2.0.9
  lottie: ^2.7.0
  shimmer: ^3.0.0
  cached_network_image: ^3.3.0

  # 状态管理和依赖注入
  get_it: ^7.6.4
  injectable: ^2.3.2
  equatable: ^2.0.5

  # 网络请求
  dio: ^5.3.2
  retrofit: ^4.0.3
  json_annotation: ^4.8.1

  # 本地数据库
  isar: ^3.1.0+1
  isar_flutter_libs: ^3.1.0+1

  # 认证和加密
  oauth2: ^2.0.2
  crypto: ^3.0.3
  flutter_secure_storage: ^9.0.0

  # 文件处理
  path_provider: ^2.1.1
  file_picker: ^6.1.1
  permission_handler: ^11.0.1

  # 日期时间
  intl: ^0.20.2
  timeago: ^3.6.0

  # 工具类
  uuid: ^4.2.1
  logger: ^2.0.2+1
  url_launcher: ^6.2.1
  share_plus: ^7.2.1
  clipboard: ^0.1.3
  # regex: ^1.0.0

  # AI相关
  http: ^1.1.0
  json_serializable: ^6.7.1

  # 本地通知
  flutter_local_notifications: ^16.3.0

  # 图表
  fl_chart: ^0.65.0

  # 富文本编辑
  flutter_quill: ^11.4.2

  # 音频处理
                # record: ^5.0.4  # 暂时注释掉，避免macOS构建问题
  audioplayers: ^5.2.1

dev_dependencies:
  flutter_test:
    sdk: flutter

  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  flutter_lints: ^3.0.0
  build_runner: ^2.4.7
  json_serializable: ^6.7.1
  retrofit_generator: ^7.0.8
  injectable_generator: ^2.4.1
  isar_generator: ^3.1.0+1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  # assets:
  #   - assets/images/
  #   - assets/icons/
  #   - assets/animations/
  #   - assets/data/

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Roboto
  #     fonts:
  #       - asset: assets/fonts/Roboto-Regular.ttf
  #       - asset: assets/fonts/Roboto-Bold.ttf
  #         weight: 700
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
